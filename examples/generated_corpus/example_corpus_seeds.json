[
    {
        "question": "Retrieve transactions with amount greater than 5,000 and status 'Completed', sorted by timestamp in descending order.",
        "query": "MATCH (t:Transaction) WHERE t.amount > 5000 AND t.status = 'Completed' RETURN t ORDER BY t.timestamp DESC"
    },
    {
        "question": "List all accounts with a balance greater than 100,000 and currency 'USD', ordered by balance in descending order.",
        "query": "MATCH (a:Account) WHERE a.balance > 100000 AND a.currency = 'USD' RETURN a ORDER BY a.balance DESC"
    },
    {
        "question": "Find all customers with a risk rating of 'High' or 'Very High', and sort them by their onboarding date in ascending order.",
        "query": "MATCH (c:Customer) WHERE c.risk_rating IN ['High', 'Very High'] RETURN c ORDER BY c.onboarding_date ASC"
    },
    {
        "question": "Calculate the average account balance for all accounts that have triggered at least one risk assessment.",
        "query": "MATCH (a:Account)-[:Triggered]->(:RiskAssessment) RETURN avg(a.balance) AS average_balance"
    },
    {
        "question": "What financial products are offered by accounts that are associated with the customer having the ID 'CUS000000', and what are the names and types of these financial products?",
        "query": "MATCH (c:Customer {Customer_id: 'CUS000000'})-[:HoldsAccount]->(a:Account)-[:OffersProduct]->(fp:FinancialProduct) RETURN fp.name, fp.product_type"
    },
    {
        "question": "Which accounts are connected to the customer named 'Shannon Hughes' through the 'HoldsAccount' relationship, and what are their account numbers and balances?",
        "query": "MATCH (c:Customer {name: 'Shannon Hughes'})-[r:HoldsAccount]->(a:Account) RETURN a.account_number, a.balance"
    },
    {
        "question": "How many financial products of each product type have been offered by accounts linked to customers who onboarded in the last year?",
        "query": "MATCH (c:Customer)-[:HoldsAccount]->(a:Account)-[:OffersProduct]->(fp:FinancialProduct) WHERE c.onboarding_date >= date('2023-01-01') AND c.onboarding_date <= date('2023-12-31') RETURN fp.product_type, COUNT(fp) AS product_count"
    },
    {
        "question": "Calculate the average account balance for all accounts that have triggered at least one risk assessment.",
        "query": "MATCH (a:Account)-[:Triggered]->(:RiskAssessment) RETURN avg(a.balance) AS average_balance"
    },
    {
        "question": "How many accounts are currently active and what is the total balance across all these active accounts?",
        "query": "MATCH (a:Account) WHERE a.status = 'active' RETURN count(a) AS active_account_count, sum(a.balance) AS total_balance"
    },
    {
        "question": "Identify transactions that are linked to the same audit log entry and list their details.",
        "query": "MATCH (t:Transaction)-[:RecordedIn]->(a:AuditLog)<-[:RecordedIn]-(t2:Transaction) WHERE t.Transaction_id <> t2.Transaction_id RETURN DISTINCT t.Transaction_id, t.amount, t.currency, t.timestamp, t.transaction_type, t.status, t.reference_number"
    },
    {
        "question": "Find all customers whose risk rating is higher than the risk rating of the customer named 'Shannon Hughes'.",
        "query": "MATCH (c:Customer {name: 'Shannon Hughes'}) WITH c.risk_rating AS shannon_risk_rating MATCH (cust:Customer) WHERE cust.risk_rating > shannon_risk_rating RETURN cust"
    },
    {
        "question": "Retrieve all transactions where the transaction amount exceeds the average transaction amount across all transactions.",
        "query": "MATCH (t:Transaction) WITH avg(t.amount) AS average_amount MATCH (t:Transaction) WHERE t.amount > average_amount RETURN t"
    },
    {
        "question": "Find all customers whose risk rating is higher than the risk rating of the customer named 'Shannon Hughes'.",
        "query": "MATCH (c:Customer {name: 'Shannon Hughes'}) WITH c.risk_rating AS shannon_risk_rating MATCH (cust:Customer) WHERE cust.risk_rating > shannon_risk_rating RETURN cust"
    },
    {
        "question": "Retrieve all transactions where the transaction amount exceeds the average transaction amount across all transactions.",
        "query": "MATCH (t:Transaction) WITH avg(t.amount) AS avg_amount MATCH (t:Transaction) WHERE t.amount > avg_amount RETURN t"
    },
    {
        "question": "Find all customers whose risk rating is higher than the risk rating of the customer named 'Shannon Hughes'.",
        "query": "MATCH (c1:Customer {name: 'Shannon Hughes'}) WITH c1.risk_rating AS shannon_risk_rating MATCH (c2:Customer) WHERE c2.risk_rating > shannon_risk_rating RETURN c2"
    },
    {
        "question": "Retrieve all transactions where the transaction amount exceeds the average transaction amount across all transactions.",
        "query": "MATCH (t:Transaction) WITH avg(t.amount) AS avg_amount MATCH (t:Transaction) WHERE t.amount > avg_amount RETURN t"
    },
    {
        "question": "What is the total number of active accounts and what is the sum of their balances?",
        "query": "MATCH (a:Account) WHERE a.status = 'active' RETURN count(a) AS total_active_accounts, sum(a.balance) AS total_balance"
    },
    {
        "question": "How many customers have a risk rating of 'High' and what is the average balance of their accounts?",
        "query": "MATCH (c:Customer)-[:HoldsAccount]->(a:Account) WHERE c.risk_rating = 'High' RETURN count(DISTINCT c) AS high_risk_customer_count, avg(a.balance) AS average_account_balance"
    },
    {
        "question": "What regulatory entities are associated with transactions made by the customer 'Shannon Hughes', through the path of accounts and transactions?",
        "query": "MATCH (c:Customer {name: 'Shannon Hughes'})-[:HoldsAccount]->(a:Account)-[:TransactsWith]->(t:Transaction)-[:ReportsTo]->(r:RegulatoryEntity) RETURN DISTINCT r"
    },
    {
        "question": "Which accounts are connected to the customer named 'Shannon Hughes' through the 'HoldsAccount' relationship, and what are their current balances?",
        "query": "MATCH (c:Customer)-[:HoldsAccount]->(a:Account) WHERE c.name = 'Shannon Hughes' RETURN a.Account_id, a.balance"
    },
    {
        "question": "Find all customers whose risk rating is higher than the risk rating of the customer named 'Shannon Hughes'.",
        "query": "MATCH (c1:Customer {name: 'Shannon Hughes'}) WITH c1.risk_rating AS shannon_risk_rating MATCH (c2:Customer) WHERE c2.risk_rating > shannon_risk_rating RETURN c2"
    },
    {
        "question": "Retrieve all transactions where the transaction amount exceeds the average transaction amount across all transactions.",
        "query": "MATCH (t:Transaction) WITH avg(t.amount) AS average_amount MATCH (t:Transaction) WHERE t.amount > average_amount RETURN t"
    },
    {
        "question": "Identify transactions where the amount is greater than the highest transaction amount associated with any account linked to a specific institution named 'Global Bank Ltd'.",
        "query": "MATCH (institution:Institution {name: 'Global Bank Ltd'})-[:CorrespondentWith]->(relatedInstitution:Institution)<-[:HoldsAccount]-(customer:Customer)-[holdsAccount:HoldsAccount]->(account:Account)-[transactsWith:TransactsWith]-(transaction:Transaction) WITH MAX(transaction.amount) AS maxAmount MATCH (t:Transaction) WHERE t.amount > maxAmount RETURN t"
    },
    {
        "question": "List all accounts that have a balance greater than the average balance of accounts held by customers with a 'premium' customer type.",
        "query": "MATCH (c:Customer {customer_type: 'premium'})-[:HoldsAccount]->(a:Account) WITH avg(a.balance) AS avg_balance MATCH (acc:Account) WHERE acc.balance > avg_balance RETURN acc"
    },
    {
        "question": "Identify the shortest traversal path from any transaction with an amount greater than $10,000 to its associated audit log entry, including all intermediate nodes and relationships involved.",
        "query": "MATCH (t:Transaction)-[r:RecordedIn]->(a:AuditLog) WHERE t.amount > 10000 RETURN t, r, a"
    },
    {
        "question": "Identify transactions where the amount is greater than the highest transaction amount associated with any account linked to a specific institution named 'Global Bank Ltd'.",
        "query": "MATCH (institution:Institution {name: 'Global Bank Ltd'})-[:CorrespondentWith]->(related_institution:Institution)<-[:HoldsAccount]-(customer:Customer)-[:HoldsAccount]->(account:Account)-[:TransactsWith]->(transaction:Transaction) WITH MAX(transaction.amount) AS max_amount MATCH (t:Transaction) WHERE t.amount > max_amount RETURN t"
    },
    {
        "question": "List all accounts that have a balance greater than the average balance of accounts held by customers with a 'premium' customer type.",
        "query": "MATCH (c:Customer {customer_type: 'premium'})-[:HoldsAccount]->(a:Account) WITH AVG(a.balance) AS avg_balance MATCH (acc:Account) WHERE acc.balance > avg_balance RETURN acc"
    },
    {
        "question": "What regulatory entities are associated with transactions made by accounts held by the customer with ID 'CUS000000', and what are their jurisdictions and compliance domains?",
        "query": "MATCH (c:Customer {Customer_id: 'CUS000000'})-[:HoldsAccount]->(a:Account)-[:TransactsWith]->(t:Transaction)-[:ReportsTo]->(re:RegulatoryEntity) RETURN DISTINCT re.name, re.jurisdiction, re.compliance_domain"
    },
    {
        "question": "What regulatory entities are associated with transactions made by accounts held by the customer with ID 'CUS000000', and what are their jurisdictions and reporting frequencies?",
        "query": "MATCH (c:Customer {Customer_id: 'CUS000000'})-[:HoldsAccount]->(a:Account)-[:TransactsWith]->(t:Transaction)-[:ReportsTo]->(r:RegulatoryEntity) RETURN DISTINCT r.name AS regulatory_entity, r.jurisdiction AS jurisdiction, r.reporting_frequency AS reporting_frequency"
    },
    {
        "question": "Identify transactions where the amount is greater than the highest transaction amount associated with any account linked to the institution named 'Global Bank Ltd'.",
        "query": "MATCH (i:Institution {name: 'Global Bank Ltd'})-[:CorrespondentWith]->(inst:Institution)<-[:TransactsWith]-(a:Account)-[:TransactsWith]->(t:Transaction) WITH MAX(t.amount) AS max_amount MATCH (tx:Transaction) WHERE tx.amount > max_amount RETURN tx"
    },
    {
        "question": "List all accounts that have a balance greater than the average balance of accounts held by customers with a 'premium' customer type.",
        "query": "MATCH (c:Customer {customer_type: 'premium'})-[:HoldsAccount]->(a:Account) WITH avg(a.balance) AS avg_balance MATCH (acc:Account) WHERE acc.balance > avg_balance RETURN acc"
    },
    {
        "question": "Which customers are connected to the same institution through correspondent relationships, and what are the names of those institutions?",
        "query": "MATCH (i1:Institution)-[r:CorrespondentWith]-(i2:Institution) RETURN i1.name AS institution1, i2.name AS institution2"
    },
    {
        "question": "What financial products are offered by accounts that are associated with the same risk assessment, and what are the names and risk profiles of these products?",
        "query": "MATCH (a:Account)-[:Triggered]->(ra:RiskAssessment)<-[:Triggered]-(other_a:Account)-[:OffersProduct]->(fp:FinancialProduct) RETURN DISTINCT fp.name, fp.risk_profile"
    },
    {
        "question": "Find all accounts that are linked to the same regulatory entity through transaction reporting, and list the account numbers and statuses of these accounts.",
        "query": "MATCH (a:Account)-[:ReportsTo]->(re:RegulatoryEntity)<-[:ReportsTo]-(other:Account) RETURN DISTINCT a.account_number, a.status"
    }
]